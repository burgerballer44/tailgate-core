{"version":1,"defects":{"Tailgate\\Test\\Domain\\Model\\UserTest::testUserShouldBeTheSameAfterReconstitution":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanBeActivated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testAPasswordCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testAnEmailCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanHaveAPasswordResetTokenCreated":4,"Tailgate\\Test\\Domain\\Model\\TeamTest::testATeamCanBeAdded":3,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testASeasonCanBeCreated":3,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameCanBeAddedToASeason":4,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameCanBeRemovedFromASeason":4,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameScoreCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testThereAreNoGamesInADeletedSeason":4,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testASeasonCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserStoresUserIdPasswordHashAndEmail":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserHasPendingStatus":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserHasStandardRole":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testActivatingAUserSetsTheActiveStatus":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testEmailStatusAndRoleCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\UserTest::testUpdatingAUserThrowsExceptionsWithInvalidValues":3,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanHaveApasswordResetTokenApplied":4,"Tailgate\\Test\\Domain\\Model\\PasswordResetTokenTest::testAPasswordResetTokenCanBeCreated":4,"Tailgate\\Test\\Domain\\Model\\TeamTest::testDesignationAndMascotCanBeUpdated":3,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testSeasonShouldBeTheSameAfterReconstitution":4,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testExceptionThrownWhenTryingToUpdateScoreForGameThatDoesNotExist":3,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testExceptionThrownWhenDeletingGameThatDoesNotExist":3,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testUpdatingSeasonWithInvalidValuesThrowsException":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAGroupCanBeCreated":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupHasAScoreWhenScoreIsSubmitted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupGetsAMemberWhenMemberIsAdded":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownIfMemberAlreadyPartOfGroup":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddMoreMembersThanLimit":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testThereAreNoMembersAndScoresWhenGroupIsDeleted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAMemberTheirPlayersAndTheirScoresAreRemovedWhenAMemberIsDeleted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotDeleteAnAdminIfTheyAreTheLastAdminInTheGroup":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAPlayersAndTheirScoresAreRemovedWhenAPlayerIsDeleted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAPlayerMemberIsChangedWhenAPlayerOwnerIsChanged":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAScoreIsRemovedWhenAScoreIsDeleted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAGroupCanBeUpdated":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAMemberCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotUpdateAnAdminToMemberStatusIfTheyAreTheLastAdminInTheGroup":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAScoreCanBeUpdated":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupGetsAPlayerWhenPlayerIsAdded":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddAPlayerForMemberPastPlayerLimitForSinglePlayerMember":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddAPlayerForMemberPastPlayerLimitForMultiplePlayerMember":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForPlayerThatDoesntExistWhenSubmittingScore":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForPlayerThatHasAlreadySubmitAScoreForGame":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForMemberThatDoesntExistWhenAddingPlayer":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForScoreThatDoesntExistWhenUpdatingScore":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUpdateMemberThrowsExceptionsWithInvalidValues":3,"Tailgate\\Test\\Domain\\Model\\GroupTest::testDeleteMemberThrowsExceptionsWithInvalidValues":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testDeleteScoreThrowsExceptionsWithInvalidValues":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testFollowAddedWhenTeamIsFollowed":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownWhenTeamIsAlreadyFollowedByGroup":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAFollowCanBeDeleted":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownWhenDeletingFollowThatDoesNotExist":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupShouldBeTheSameAfterReconstitution":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUserWhoCreatesGroupIsAMemberOfGroupWhenGroupIsCreated":4,"Tailgate\\Test\\Domain\\Model\\GroupTest::testThereAreNoMembersPlayersAndScoresWhenGroupIsDeleted":4,"Tailgate\\Test\\Domain\\Service\\User\\ActivateUserHandlerTest::testItAddsAUserActivatedToTheRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\DeleteUserHandlerTest::testItAddsAUserDeletedToTheRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\RegisterUserHandlerTest::testItAddsAUserRegisteredToTheUserRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\RequestPasswordResetHandlerTest::testItAddsAPasswordResetTokenAppliedToTheRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\ResetPasswordHandlerTest::testItAddsAPasswordUpdatedRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\UpdateEmailHandlerTest::testItAddsAEmailUpdatedRepository":4,"Tailgate\\Test\\Domain\\Service\\User\\UpdateUserHandlerTest::testItAddsAUserUpdatedToTheUserRepository":4,"Tailgate\\Test\\Domain\\Service\\Team\\AddTeamHandlerTest::testItAddsATeamAddedEventToTheTeamRepository":4,"Tailgate\\Test\\Domain\\Service\\Team\\DeleteTeamHandlerTest::testItAttemptsToAddATeamDeletedEventToTheTeamRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\AddGameHandlerTest::testItAddsAGameAddedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\CreateSeasonHandlerTest::testItAddsASeasonCreatedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\DeleteGameHandlerTest::testItAddsAGameDeletedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\DeleteSeasonHandlerTest::testItAddsASeasonDeletedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\UpdateGameScoreHandlerTest::testItAddsAGameScoreUpdatedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Season\\UpdateSeasonHandlerTest::testItAddsASeasonUpdatedEventToTheSeasonRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\GroupByUserQueryHandlerTest::testItAttemptsToGetAGroupByGroupIdFromGroupViewRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\AddMemberToGroupHandlerTest::testItAddsAMemberAddedEventToAGroupInTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\AddPlayerToGroupHandlerTest::testItAddsAPlayerAddedEventToAGroupInTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\ChangePlayerOwnerHandlerTest::testItAddsAPlayerOwnerChangedEventToAGroupInTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\CreateGroupHandlerTest::testItAddsAGroupCreatedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteFollowHandlerTest::testItAttemptsToAddAFollowDeletedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteMemberHandlerTest::testItAddsAMemberDeletedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\DeletePlayerHandlerTest::testItAddsAPlayerDeletedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteScoreHandlerTest::testItAddsAScoreDeletedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\FollowTeamHandlerTest::testItAttemptsToAddATeamFollowedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\SubmitScoreForGroupHandlerTest::testItAddsScoreSubmittedEventToAGroupInTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateGroupHandlerTest::testItAddsAGroupUpdatedEventToTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateMemberHandlerTest::testItAddsAMemberUpdatedEventToAGroupInTheGroupRepository":4,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateScoreForGroupHandlerTest::testItAddsAGroupScoreUpdatedEventToAGroupInTheGroupRepository":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\PDO\\PDOEventStoreTest::testItCanGetAnAggregateHistory":3,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupCreated":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberAdded":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberUpdated":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectScoreSubmitted":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupUpdated":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerOwnerChanged":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberDeleted":3,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerDeleted":3,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectScoreDeleted":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupDeleted":3,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupScoreUpdated":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerAdded":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectTeamFollowed":4,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectFollowDeleted":6,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonCreated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameAdded":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameScoreUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameDeleted":6,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonDeleted":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamAdded":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamDeleted":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserRegistered":3,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserActivated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserDeleted":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectPasswordUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectEmailUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserUpdated":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectPasswordResetTokenApplied":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItCanGetAGroup":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItCanAddEventsToTheEventPublisher":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItReturnsANewGroupIdentity":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItCanGetASeason":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItCanAddEventsToTheEventPublisher":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItReturnsANewSeasonIdentity":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItCanGetATeam":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItCanAddEventsToTheEventPublisher":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItReturnsANewTeamIdentity":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItCanGetAUser":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItCanAddEventsToTheEventPublisher":4,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItReturnsANewUserIdentity":4},"times":{"Tailgate\\Test\\Domain\\Model\\UserTest::testUserShouldBeTheSameAfterReconstitution":0.002,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanBeCreated":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanBeActivated":0.001,"Tailgate\\Test\\Domain\\Model\\UserTest::testAPasswordCanBeUpdated":0.001,"Tailgate\\Test\\Domain\\Model\\UserTest::testAnEmailCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanBeUpdated":0.006,"Tailgate\\Test\\Domain\\Model\\UserTest::testUpdatingAUserThrowsExceptionsWithInvalidValues":0.012,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanHaveAPasswordResetTokenCreated":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testAPasswordResetTokenIsInvalidIfOlderThanOneHour":0.01,"Tailgate\\Test\\Domain\\Model\\UserTest::testAPasswordResetTokenIsValidIfWithinOneHour":0.009,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserStoresUserIdPasswordHashAndEmail":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserHasPendingStatus":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserHasStandard":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testRegisteringAUserHasStandardRole":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testActivatingAUserSetsTheActiveStatus":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testEmailStatusAndRoleCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\TeamTest::testTeamShouldBeTheSameAfterReconstitution":0.001,"Tailgate\\Test\\Domain\\Model\\TeamTest::testATeamCanBeCreated":0,"Tailgate\\Test\\Domain\\Model\\TeamTest::testATeamCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\TeamTest::testATeamCanBeAdded":0,"Tailgate\\Test\\Domain\\Model\\TeamTest::testDesignationAndMascotCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testSeasonShouldBeTheSameAfterReconstitution":0.001,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testASeasonCanBeCreated":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameCanBeAddedToASeason":0.001,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameScoreCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testExceptionThrownWhenTryingToUpdateScoreForGameThatDoesNotExist":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testAGameCanBeRemovedFromASeason":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testExceptionThrownWhenDeletingGameThatDoesNotExist":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testThereAreNoGamesInADeletedSeason":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testASeasonCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testUpdatingSeasonWithInvalidValuesThrowsException":0,"Tailgate\\Test\\Domain\\Model\\UserTest::testAUserCanHaveApasswordResetTokenApplied":0,"Tailgate\\Test\\Domain\\Model\\PasswordResetTokenTest::testAPasswordResetTokenCanBeCreated":0.004,"Tailgate\\Test\\Domain\\Model\\PasswordResetTokenTest::testAPasswordResetTokenIsInvalidIfOlderThanOneHour":0,"Tailgate\\Test\\Domain\\Model\\PasswordResetTokenTest::testAPasswordResetTokenIsValidIfWithinOneHour":0,"Tailgate\\Test\\Domain\\Model\\PasswordResetTokenTest::testAPasswordResetTokenCanBeCreatedInACertainFormat":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupShouldBeTheSameAfterReconstitution":0.012,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAGroupCanBeCreated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUserWhoCreatesGroupIsAMemberOfGroupWhenGroupIsCreated":0.001,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupHasAScoreWhenScoreIsSubmitted":0.001,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupGetsAMemberWhenMemberIsAdded":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownIfMemberAlreadyPartOfGroup":0.001,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddMoreMembersThanLimit":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testThereAreNoMembersAndScoresWhenGroupIsDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAMemberTheirPlayersAndTheirScoresAreRemovedWhenAMemberIsDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotDeleteAnAdminIfTheyAreTheLastAdminInTheGroup":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAPlayersAndTheirScoresAreRemovedWhenAPlayerIsDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAPlayerMemberIsChangedWhenAPlayerOwnerIsChanged":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAScoreIsRemovedWhenAScoreIsDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAGroupCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAMemberCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotUpdateAnAdminToMemberStatusIfTheyAreTheLastAdminInTheGroup":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAScoreCanBeUpdated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testGroupGetsAPlayerWhenPlayerIsAdded":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddAPlayerForMemberPastPlayerLimitForSinglePlayerMember":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testCannotAddAPlayerForMemberPastPlayerLimitForMultiplePlayerMember":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForPlayerThatDoesntExistWhenSubmittingScore":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForPlayerThatHasAlreadySubmitAScoreForGame":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForMemberThatDoesntExistWhenAddingPlayer":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAnExceptionThrownForScoreThatDoesntExistWhenUpdatingScore":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUpdateMemberThrowsExceptionsWithInvalidValues":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testDeleteMemberThrowsExceptionsWithInvalidValues":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testDeleteScoreThrowsExceptionsWithInvalidValues":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testFollowAddedWhenTeamIsFollowed":0.001,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownWhenTeamIsAlreadyFollowedByGroup":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAFollowCanBeDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testExceptionThrownWhenDeletingFollowThatDoesNotExist":0,"Tailgate\\Test\\Domain\\Model\\SeasonTest::testASeasonHasNoGamesWhenCreated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAGroupHasNoScoresWhenCreated":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUserWhoCreatesGroupIsAGroupAdmin":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testUserWhoCreatesGroupCanAddMultiplePlayers":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testThereAreNoMembersPlayersAndScoresWhenGroupIsDeleted":0,"Tailgate\\Test\\Domain\\Model\\GroupTest::testAPlayerMemberIsChangedToOtherMemberWhenAPlayerOwnerIsChanged":0,"Tailgate\\Test\\Domain\\Service\\User\\ActivateUserHandlerTest::testItAddsAUserActivatedToTheRepository":0.001,"Tailgate\\Test\\Domain\\Service\\User\\AllUsersQueryHandlerTest::testItAttemptsToGetAllUsersFromUserViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\User\\DeleteUserHandlerTest::testItAddsAUserDeletedToTheRepository":0.001,"Tailgate\\Test\\Domain\\Service\\User\\RegisterUserHandlerTest::testItAddsAUserRegisteredToTheUserRepository":0.001,"Tailgate\\Test\\Domain\\Service\\User\\RequestPasswordResetHandlerTest::testItAddsAPasswordResetTokenAppliedToTheRepository":0,"Tailgate\\Test\\Domain\\Service\\User\\ResetPasswordHandlerTest::testItAddsAPasswordUpdatedRepository":0.001,"Tailgate\\Test\\Domain\\Service\\User\\UpdateEmailHandlerTest::testItAddsAEmailUpdatedRepository":0,"Tailgate\\Test\\Domain\\Service\\User\\UpdateUserHandlerTest::testItAddsAUserUpdatedToTheUserRepository":0,"Tailgate\\Test\\Domain\\Service\\User\\UserResetPasswordTokenQueryHandlerTest::testItAttemptsToGetAUserByPasswordResetTokenFromUserViewRepository":0,"Tailgate\\Test\\Domain\\Service\\User\\UserQueryHandlerTest::testItAttemptsToGetAUserByUserIdFromUserViewRepository":0,"Tailgate\\Test\\Domain\\Service\\User\\UserEmailQueryHandlerTest::testItAttemptsToGetAUserByPasswordResetTokenFromUserViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Team\\AddTeamHandlerTest::testItAddsATeamAddedEventToTheTeamRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Team\\AllTeamsQueryHandlerTest::testItAttemptsToGetAllTeamsFromTeamViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Team\\DeleteTeamHandlerTest::testItAttemptsToAddATeamDeletedEventToTheTeamRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Team\\TeamQueryHandlerTest::testItAttemptsToGetATeamByTeamIdFromTeamViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Team\\TeamsBySportQueryHandlerTest::testItAttemptsToGetAllTeamsBySportFromTeamViewRepository":0,"Tailgate\\Test\\Domain\\Service\\Team\\UpdateTeamHandlerTest::testItAttemptsToAddATeamUpdatedEventToTheTeamRepository":0,"Tailgate\\Test\\Domain\\Service\\Season\\SeasonQueryHandlerTest::testItAttemptsToGetASeasonBySeasonIdFromTeamViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Season\\AllSeasonsQueryHandlerTest::testItAttemptsToGetAllSeasonsFromSeasonViewRepository":0,"Tailgate\\Test\\Domain\\Service\\Season\\AllFollowedGamesQueryHandlerTest::testItAttemptsToGetASeasonBySeasonIdFromTeamViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Season\\AddGameHandlerTest::testItAddsAGameAddedEventToTheSeasonRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Season\\AllSeasonsBySportQueryHandlerTest::testItAttemptsToGetAllSeasonsFromSeasonViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Season\\CreateSeasonHandlerTest::testItAddsASeasonCreatedEventToTheSeasonRepository":0,"Tailgate\\Test\\Domain\\Service\\Season\\DeleteGameHandlerTest::testItAddsAGameDeletedEventToTheSeasonRepository":0,"Tailgate\\Test\\Domain\\Service\\Season\\DeleteSeasonHandlerTest::testItAddsASeasonDeletedEventToTheSeasonRepository":0,"Tailgate\\Test\\Domain\\Service\\Season\\UpdateGameScoreHandlerTest::testItAddsAGameScoreUpdatedEventToTheSeasonRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Season\\UpdateSeasonHandlerTest::testItAddsASeasonUpdatedEventToTheSeasonRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\QueryGroupsQueryHandlerTest::testItAttemptsToQueryGroupsFromGroupViewRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\GroupQueryHandlerTest::testItAttemptsToGetAGroupByGroupIdFromGroupViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\GroupInviteCodeQueryHandlerTest::testItAttemptsToQueryGroupsFromGroupViewRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\GroupByUserQueryHandlerTest::testItAttemptsToGetAGroupByGroupIdFromGroupViewRepository":0.004,"Tailgate\\Test\\Domain\\Service\\Group\\AllGroupsQueryHandlerTest::testItAttemptsToGetAllGroupsFromGroupViewRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\AddMemberToGroupHandlerTest::testItAddsAMemberAddedEventToAGroupInTheGroupRepository":0.009,"Tailgate\\Test\\Domain\\Service\\Group\\AddPlayerToGroupHandlerTest::testItAddsAPlayerAddedEventToAGroupInTheGroupRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\AllGroupsByUserQueryHandlerTest::testItAttemptsToGetAllGroupsFromGroupViewRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\ChangePlayerOwnerHandlerTest::testItAddsAPlayerOwnerChangedEventToAGroupInTheGroupRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\CreateGroupHandlerTest::testItAddsAGroupCreatedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteFollowHandlerTest::testItAttemptsToAddAFollowDeletedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteGroupHandlerTest::testItAddsAGroupDeletedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteMemberHandlerTest::testItAddsAMemberDeletedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\DeletePlayerHandlerTest::testItAddsAPlayerDeletedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\DeleteScoreHandlerTest::testItAddsAScoreDeletedEventToTheGroupRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\FollowTeamHandlerTest::testItAttemptsToAddATeamFollowedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\SubmitScoreForGroupHandlerTest::testItAddsScoreSubmittedEventToAGroupInTheGroupRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateGroupHandlerTest::testItAddsAGroupUpdatedEventToTheGroupRepository":0,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateMemberHandlerTest::testItAddsAMemberUpdatedEventToAGroupInTheGroupRepository":0.001,"Tailgate\\Test\\Domain\\Service\\Group\\UpdateScoreForGroupHandlerTest::testItAddsAGroupScoreUpdatedEventToAGroupInTheGroupRepository":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\InMemory\\InMemoryEventStoreTest::testItCanCommitOneDomainEvent":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\InMemory\\InMemoryEventStoreTest::testItCommitManyDomainEventsAndCanReturnAggregateHistory":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\PDO\\PDOEventStoreTest::testItCanCommitADomainEvent":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\PDO\\PDOEventStoreTest::testItCanCommitManyDomainEvents":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Event\\PDO\\PDOEventStoreTest::testItCanGetAnAggregateHistory":0.001,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupCreated":0.001,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberAdded":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberUpdated":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectScoreSubmitted":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupUpdated":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerOwnerChanged":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectMemberDeleted":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerDeleted":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectScoreDeleted":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupDeleted":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectGroupScoreUpdated":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectPlayerAdded":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectTeamFollowed":0,"Infrastructure\\Persistence\\Projection\\PDO\\PDOGroupProjectionTest::testItCanProjectFollowDeleted":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonCreated":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameAdded":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameScoreUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectGameDeleted":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonDeleted":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOSeasonProjectionTest::testItCanProjectSeasonUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamAdded":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOTeamProjectionTest::testItCanProjectTeamDeleted":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserRegistered":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserActivated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserDeleted":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectPasswordUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectEmailUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectUserUpdated":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Projection\\PDO\\PDOUserProjectionTest::testItCanProjectPasswordResetTokenApplied":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItCanGetAGroup":0.002,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItCanAddEventsToTheEventPublisher":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherGroupRepositoryTest::testItReturnsANewGroupIdentity":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItCanGetASeason":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItCanAddEventsToTheEventPublisher":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherSeasonRepositoryTest::testItReturnsANewSeasonIdentity":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItCanGetATeam":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItCanAddEventsToTheEventPublisher":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherTeamRepositoryTest::testItReturnsANewTeamIdentity":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItCanGetAUser":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItCanAddEventsToTheEventPublisher":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\Repository\\Publisher\\PublisherUserRepositoryTest::testItReturnsANewUserIdentity":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOFollowViewRepositoryTest::testFollowThatDoesNotExistReturnsException":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOFollowViewRepositoryTest::testItCanGetAFollow":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOFollowViewRepositoryTest::testItCanGetAllFollowsOfATeam":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOFollowViewRepositoryTest::testItCanGetAFollowForAGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGameViewRepositoryTest::testGameThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGameViewRepositoryTest::testItCanGetAGame":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGameViewRepositoryTest::testItCanGetAllGamesOfASeason":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGameViewRepositoryTest::testItCanGetAllGamesOfATeam":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGameViewRepositoryTest::testItCanGetAllGamesOfATeamAndSeason":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testGroupThatDoesNotExistReturnsException":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testItCanGetAGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testGroupByUserThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testItCanGetAGroupByUser":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testItCanGetAllGroups":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testItCanGetAllGroupsForAUser":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testItCanQueryGroups":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testGroupThatDoesNotExistByInviteCodeReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOGroupViewRepositoryTest::testCanGetAGroupByInviteCode":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOMemberViewRepositoryTest::testMemberThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOMemberViewRepositoryTest::testItCanGetAMember":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOMemberViewRepositoryTest::testItCanGetAllMembersOfAGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOMemberViewRepositoryTest::testItCanGetAllMembersByUser":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOPlayerViewRepositoryTest::testPlayerThatDoesNotExistReturnsException":0.001,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOPlayerViewRepositoryTest::testItCanGetAPlayer":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOPlayerViewRepositoryTest::testItCanGetAllPlayersOfAGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOScoreViewRepositoryTest::testScoreThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOScoreViewRepositoryTest::testItCanGetAScore":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOScoreViewRepositoryTest::testItCanGetAllScoresOfAGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOScoreViewRepositoryTest::testItCanGetAllScoresOfAPlayersInTheGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOScoreViewRepositoryTest::testItCanGetAllScoresOfAGameInTheGroup":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOSeasonViewRepositoryTest::testSeasonThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOSeasonViewRepositoryTest::testItCanGetASeason":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOSeasonViewRepositoryTest::testItCanGetSeasonsBySport":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOSeasonViewRepositoryTest::testItCanGetAllSeasons":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOTeamViewRepositoryTest::testTeamThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOTeamViewRepositoryTest::testItCanGetATeam":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOTeamViewRepositoryTest::testItCanGetAllTeamsBySportAndSeason":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOTeamViewRepositoryTest::testItCanGetAllTeams":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testUserThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testItCanGetAUser":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testItCanGetAllUsers":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testItCanGetAUserByEmail":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testEmailThatDoesNotExistThrowsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testItCanGetAUserByPasswordResetToken":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testPasswordResetTokenThatDoesNotExistReturnsException":0,"Tailgate\\Tests\\Infrastructure\\Persistence\\ViewRepository\\PDO\\PDOUserViewRepositoryTest::testPasswordResetTokenThatExpiredReturnsException":0,"Tailgate\\Test\\Infrastructure\\Service\\PasswordHashing\\BasicPasswordHashingTest::testItHashesByUsingStandardPHPStyle":0.046,"Tailgate\\Test\\Infrastructure\\Service\\PasswordHashing\\BasicPasswordHashingTest::testItVerifiesByUsingStandardPHPStyle":0.045}}